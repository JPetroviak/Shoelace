// Grid
@mixin make-container {
	margin-left: auto;
	margin-right: auto;

	@if $container-padding > 0 {
		padding-left: $container-padding;
		padding-right: $container-padding;
	}

	width: 100%;
}

@mixin make-container-sizes($breakpoints: $breakpoints) {
	@each $class, $breakpoint in $breakpoints {
	  &.#{$class} {
			max-width: $breakpoint;
		}
	}
}

@mixin make-grid {
	@if $grid-flex {
		display: flex;
		flex-wrap: wrap;
	} @else {
		display: block;
		letter-spacing: -4.5px;
	}

	@if $grid-padding > 0 {
		margin-left: -($grid-padding / 2);
		margin-right: -($grid-padding / 2);
	}
}

@mixin make-tile {
	@if not $grid-flex {
		display: inline-block;
		letter-spacing: normal;
		vertical-align: top;
	}

	@if $grid-padding > 0 {
		padding-left: ($grid-padding / 2);
		padding-right: ($grid-padding / 2);
	}

	position: relative;
	width: 100%;
}

@mixin make-tile-width($size, $grid-count) {
	@if $grid-flex {
		flex: 0 0 percentage($size / $grid-count);
		max-width: percentage($size / $grid-count);
	} @else {
		width: percentage($size / $grid-count);
	}
}

@mixin make-tile-right($size, $grid-count) {
	left: if($size > 0, percentage($size / $grid-count), auto);
}

@mixin make-tile-left($size, $grid-count) {
	right: if($size > 0, percentage($size / $grid-count), auto);
}

@mixin make-tile-modifier($type, $size, $grid-count) {
	@if $type == right {
		@include make-tile-right($size, $grid-count);
	} @else if $type == left {
		@include make-tile-left($size, $grid-count);
	}
}

@mixin make-tiles($tiles: $grid-count, $breakpoints: $breakpoints) {
	@each $breakpoint in map-keys($breakpoints) {
		@include breakpoint-up($breakpoint) {
			@for $i from 1 through $tiles {
				&.#{$breakpoint}-#{$i} {
					@include make-tile-width($i, $tiles);
				}
			}
			@each $modifier in (left, right) {
				@for $i from 0 through $tiles {
					&.#{$breakpoint}-#{$modifier}-#{$i} {
						@include make-tile-modifier($modifier, $i, $tiles)
					}
				}
			}
		}
	}
}