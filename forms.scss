// Forms
fieldset {
	border: none;
	margin: 0;
	min-width: 0;
	padding: 0;
}

legend {
	border: 0;
	padding: 0;
}

.form-group {
	.input-field {
		margin-bottom: $padding;

		+ .input-helper {
			margin-top: -$padding-small;
		}
	}

	.button {
		margin-bottom: $padding;
	}

	.radio {
		+ label {
			margin-bottom: $padding-small;
		}
	}

	.checkbox {
		+ label {
			margin-bottom: $padding-small;
		}
	}

	&.large {
		.input-field {
			@if $input-border-radius-large > 0 {
				border-radius: $input-border-radius-large;
			}
			font-size: $font-size-large;
			padding: $input-padding-vertical-large $input-padding-horizontal-large;
		}

		.button {
			@if $button-border-radius-large > 0 {
				border-radius: $button-border-radius-large;
			}
			font-size: $font-size-large;
			padding: $button-padding-vertical-large $button-padding-horizontal-large;
		}

		.radio + label:before {
			@if $radio-border-radius-large > 0 {
				border-radius: $radio-border-radius-large;
			}
			height: $radio-size-large;
			width: $radio-size-large;
		}

		.checkbox + label:before {
			@if $checkbox-border-radius-large > 0 {
				border-radius: $checkbox-border-radius-large;
			}
			height: $checkbox-size-large;
			width: $checkbox-size-large;
		}
	}

	&.small {
		.input-field {
			@if $input-border-radius-small > 0 {
				border-radius: $input-border-radius-small;
			}
			font-size: $font-size-small;
			padding: $input-padding-vertical-small $input-padding-horizontal-small;
		}

		.button {
			@if $button-border-radius-small > 0 {
				border-radius: $button-border-radius-small;
			}
			font-size: $font-size-small;
			padding: $button-padding-vertical-small $button-padding-horizontal-small;
		}

		.radio + label:before {
			@if $radio-border-radius-small > 0 {
				border-radius: $radio-border-radius-small;
			}
			height: $radio-size-small;
			width: $radio-size-small;
		}

		.checkbox + label:before {
			@if $checkbox-border-radius-small > 0 {
				border-radius: $checkbox-border-radius-small;
			}
			height: $checkbox-size-small;
			width: $checkbox-size-small;
		}
	}
}

.form-inline .input-field {
	width: auto;
}

optgroup {
	font-weight: bold;
}

label {
	display: inline-block;
}

.input-label {
	margin-bottom: $padding-extra-small;
	touch-action: manipulation;
	-webkit-user-select: none;

	&.required:after {
		color: $form-error-color;
		content: '*';
		margin-left: $padding-extra-small;
	}
}

input[type="number"] {
	&::-webkit-inner-spin-button, &::-webkit-outer-spin-button {
		height: auto;
	}
}

input[type="search"] {
	&::-webkit-search-cancel-button, &::-webkit-search-decoration {
		-webkit-appearance: none;
	}
}

textarea {
	overflow: auto;
	resize: vertical;
}

.input-field {
	appearance: none;
	background-color: $input-background-color;
	@if $input-borders {
		border: $input-border-width $input-border-style $input-border-color;
	}
	@else {
		border: none;
	}
	border-radius: $input-border-radius;
	color: $color-default;
	font-family: $font-family;
	font-size: $font-size;
	line-height: $line-height;
	margin: 0;
	padding: $input-padding-vertical $input-padding-horizontal;
	touch-action: manipulation;
	@if $input-transitions {
		transition: border-color $input-transition-speed $input-transition-property;
	}
	width: 100%;

	&::placeholder {
		color: $color-default-lighter;
		opacity: 1;
	}

	@if $input-hover {
		&:hover {
			border-color: $input-hover-color;
		}
	}

	&:focus {
		@if $input-focus {
			@if $input-borders {
				border-color: $input-focus-color;
			}
		}
		outline: 0;
	}

	&::-moz-focus-inner {
		border: 0;
		padding: 0;
	}

	&.large {
		@if $input-border-radius-large > 0 {
			border-radius: $input-border-radius-large;
		}
		font-size: $font-size-large;
		padding: $input-padding-vertical-large $input-padding-horizontal-large;
	}

	&.small {
		@if $input-border-radius-small > 0 {
			border-radius: $input-border-radius-small;
		}
		font-size: $font-size-small;
		padding: $input-padding-vertical-small $input-padding-horizontal-small;
	}

	option:disabled {
		color: $color-default-lighter;
	}

	&:disabled {
		background-color: $color-default-lightest;
		@if $input-borders {
			border-color: $form-border-color;
		}
		cursor: not-allowed;
		opacity: 1;
		-webkit-user-select: none;
	}

	&.error {
		@if $form-error-background-color {
			background-color: $form-error-background-color;
		}
		@if $input-borders {
			@if $form-error-color {
				border-color: $form-error-color;
			}
		}
	}
}

.input-helper {
	color: $color-default-light;
	margin-top: $padding-small;
	margin-bottom: $padding;

	&.error {
		color: $form-error-color;
	}
}

[role="button"] {
	cursor: pointer;
}

button {
	border-radius: 0;
	margin: 0;
	overflow: visible;

	&:focus {
		outline: 0;
	}

	&::-moz-focus-inner {
		border: 0;
		margin: 0;
		padding: 0;
	}
}

.button {
	background-color: $color-default-lighter;
	@if $button-borders {
		border: $button-border-width $button-border-style $button-border-color;
	}
	@else {
		border: none;
	}
	border-radius: $button-border-radius;
	color: $color-default;
	cursor: pointer;
	display: inline-block;
	font-family: $font-family;
	font-size: $font-size;
	line-height: $line-height;
	padding: $button-padding-vertical $button-padding-horizontal;
	text-align: center;
	text-decoration: none;
	@if $button-text-transform {
		text-transform: $button-text-transform;
	}
	@if $button-transitions {
		transition: background-color $button-transition-speed $button-transition-property, border-color $button-transition-speed $button-transition-property;
	}
	touch-action: manipulation;
	-webkit-user-select: none;

	&.large {
		@if $button-border-radius-large > 0 {
			border-radius: $button-border-radius-large;
		}
		font-size: $font-size-large;
		padding: $button-padding-vertical-large $button-padding-horizontal-large;
	}

	&.small {
		@if $button-border-radius-small > 0 {
			border-radius: $button-border-radius-small;
		}
		font-size: $font-size-small;
		padding: $button-padding-vertical-small $button-padding-horizontal-small;
	}

	&.full {
		width: 100%;
	}

	@if $button-hover {
		&:hover {
			background-color: darken($color-default-lighter, 10%);
			border-color: darken($color-default-lighter, 10%);
		}
	}

	@if $button-focus {
		&:focus, &:active {
			background-color: darken($color-default-lighter, 20%);
			border-color: darken($color-default-lighter, 20%);
		}
	}

	&:disabled {
		background-color: $color-default-lighter;
		border-color: $color-default-lighter;
		color: $color-default;
	}

	@each $class, $color in $colors {
		&.#{$class} {
			background-color: $color;
			border-color: $color;
			color: $background-color-default;

			@if $button-hover {
				&:hover {
					background-color: darken($color, 10%);
					border-color: darken($color, 10%);
				}
			}

			@if $button-focus {
				&:focus, &:active {
					background-color: darken($color, 20%);
					border-color: darken($color, 20%);
				}
			}

			&:disabled {
				background-color: $color;
				border-color: $color;
			}
		}
	}

	&.inverted {
		background-color: $button-background-color;
		border-color: $color-default-lighter;
		color: $color-default;
		@if $button-transitions {
			transition: background-color $button-transition-speed $button-transition-property, color $button-transition-speed $button-transition-property;
		}

		@if $button-hover {
			&:hover {
				background-color: $color-default-lighter;
			}
		}

		@if $button-focus {
			&:focus, &:active {
				background-color: $color-default-lighter;
			}
		}

		&:disabled {
			background-color: $button-background-color;
			color: $color-default;
		}

		@each $class, $color in $colors {
			&.#{$class} {
				border-color: $color;
				color: $color;

				@if $button-hover {
					&:hover {
						background-color: $color;
						color: $background-color-default;
					}
				}

				@if $button-focus {
					&:focus, &:active {
						background-color: $color;
						color: $background-color-default;
					}
				}

				&:disabled {
					background-color: $button-background-color;
					color: $color;
				}
			}
		}
	}

	&:disabled {
		cursor: not-allowed;
		opacity: .5;
	}
}

.radio {
	display: none;

	+ label {
		cursor: pointer;
		touch-action: manipulation;
		-webkit-user-select: none;

		&:before {
			background-color: $radio-background-color;
			@if $radio-borders {
				border: $radio-border-width $radio-border-style $radio-border-color;
			}
			@if $radio-border-radius > 0 {
				border-radius: $radio-border-radius;
			}
			content: '';
			display: inline-block;
			height: $radio-size;
			margin-bottom: -$padding-extra-small;
			margin-right: $padding-extra-small;
			@if $radio-transitions {
				transition: background-color $radio-transition-speed $radio-transition-property, border-color $radio-transition-speed $radio-transition-property, box-shadow $radio-transition-speed $radio-transition-property;
			}
			width: $radio-size;
		}

		&.required:after {
			color: $form-error-color;
			content: '*';
			margin-left: $padding-extra-small;
		}

		@if $radio-hovers {
			&:hover:before {
				border-color: $radio-hover-color;
			}
		}
	}

	&.large + label:before {
		@if $radio-border-radius-large > 0 {
			border-radius: $radio-border-radius-large;
		}
		height: $radio-size-large;
		width: $radio-size-large;
	}

	&.small + label:before {
		@if $radio-border-radius-small > 0 {
			border-radius: $radio-border-radius-small;
		}
		height: $radio-size-small;
		width: $radio-size-small;
	}

	&:checked + label:before {
		background-color: $radio-checked-color;
		border-color: $radio-checked-color;
		box-shadow: inset 0 0 0 2px $radio-background-color;
	}

	&:disabled + label {
		cursor: not-allowed;
		-webkit-user-select: none;

		&:before {
			background-color: $color-default-lightest;

			@if $radio-borders {
				border-color: $radio-border-color;
			}
		}
	}

	&.error + label:before {
		@if $form-error-background-color {
			background-color: $form-error-background-color;
		}
		@if $radio-borders {
			@if $form-error-color {
				border-color: $form-error-color;
			}
		}
	}
}

.checkbox {
	display: none;

	+ label {
		cursor: pointer;
		touch-action: manipulation;
		-webkit-user-select: none;

		&:before {
			background-color: $checkbox-background-color;
			@if $checkbox-borders {
				border: $checkbox-border-width $checkbox-border-style $radio-border-color;
			}
			@if $checkbox-border-radius > 0 {
				border-radius: $checkbox-border-radius;
			}
			content: '';
			display: inline-block;
			height: $checkbox-size;
			margin-bottom: -$padding-extra-small;
			margin-right: $padding-extra-small;
			@if $checkbox-transitions {
				transition: background-color $checkbox-transition-speed $checkbox-transition-property, border-color $checkbox-transition-speed $checkbox-transition-property, box-shadow $checkbox-transition-speed $checkbox-transition-property;
			}
			width: $checkbox-size;
		}

		@if $checkbox-hovers {
			&:hover:before {
				border-color: $checkbox-hover-color;
			}
		}

		&.required:after {
			color: $form-error-color;
			content: '*';
			margin-left: $padding-extra-small;
		}
	}

	&.large + label:before {
		@if $checkbox-border-radius-large > 0 {
			border-radius: $checkbox-border-radius-large;
		}
		height: $checkbox-size-large;
		width: $checkbox-size-large;
	}

	&.small + label:before {
		@if $checkbox-border-radius-small > 0 {
			border-radius: $checkbox-border-radius-small;
		}
		height: $checkbox-size-small;
		width: $checkbox-size-small;
	}

	&:checked + label:before {
		background-color: $checkbox-checked-color;
		border-color: $checkbox-checked-color;
		box-shadow: inset 0 0 0 2px $checkbox-background-color;
	}

	&:disabled + label {
		cursor: not-allowed;
		-webkit-user-select: none;

		&:before {
			background-color: $color-default-lightest;
			@if $checkbox-borders {
				border-color: $radio-border-color;
			}
		}
	}

	&.error + label:before {
		@if $form-error-background-color {
			background-color: $form-error-background-color;
		}
		@if $checkbox-borders {
			@if $form-error-color {
				border-color: $form-error-color;
			}
		}
	}
}